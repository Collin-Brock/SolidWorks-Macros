' ******************************************************************************
' Created by Collin Brockman
' Sets Sheet Format to BTI-B-CUST
' ******************************************************************************
Dim FORMATPATH As String
FORMATPATH = ""
'Preconditions:
'Open Drawing
Option Explicit
Dim swApp As SldWorks.SldWorks
Dim SelMgr As Object
Sub main()
    'Setup current drawing and sheet
    Set swApp = Application.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swDraw As SldWorks.DrawingDoc
    Dim boolstatus As Boolean
    Dim swModelEx As ModelDocExtension
    Set swModel = swApp.ActiveDoc
    Set swDraw = swModel
    Set swModelEx = swModel.Extension
    
    'Check if the instance is running
    If swModel Is Nothing Then
        swApp.SendMsgToUser ("ERROR 1002: No Open File")
        Exit Sub
    End If
    
    'Check if the File type is a Drawing
    If swModel.GetType <> swDocumentTypes_e.swDocDRAWING Then
        swApp.SendMsgToUser ("ERROR 1001: Wrong File Type")
        Exit Sub
    End If
    
    'Create CUST Path Name
    Dim Path As String
    Path = swModel.GetPathName
    Dim PathArray() As String
    PathArray = Split(Path, ".")
    Path = PathArray(0)
    Path = Path + "-CUST" + ".SLDDRW"
    
    'Save As
    '512 save as a copy and open
    Dim LongError As Long
    Dim LongWarning As Long
    boolstatus = swModelEx.SaveAs3(Path, 0, 512, Nothing, Nothing, LongError, LongWarning)
    Set swModel = swApp.ActiveDoc
    Set swDraw = swModel
    Set swModelEx = swModel.Extension
    
    'Get All Sheets by Name
    Dim swSheetNames As Variant
    swSheetNames = swDraw.GetSheetNames
    Dim swSheet As Sheet
        
    'For Loop Over each Sheet
    Dim i As Integer
    For i = 0 To UBound(swSheetNames) - 1
        boolstatus = swDraw.ActivateSheet(swSheetNames(i))
        If boolstatus = True Then
            swApp.SendMsgToUser ("Error 1003: Sheet Not Activated")
            Exit Sub
        End If
        'Dim swSheet As SldWorks.Sheet
        Set swSheet = swDraw.GetCurrentSheet
        boolstatus = swModel.Extension.SelectByID2(swSheetNames(i), "SHEET", 0, 0, 0, False, 0, Nothing, 0)
        boolstatus = swModel.Extension.DeleteSelection2(2)
        
    Next
        
    'Get Sheet Properties and set sheet properties to the same except the template is GET-B *Notes are Deleted*
    Set swSheet = swDraw.GetCurrentSheet
    Dim swSheetProp As Variant
    swSheetProp = swSheet.GetProperties2
    boolstatus = swDraw.SetupSheet5(swSheetNames(i), swSheetProp(0), 12, swSheetProp(2), swSheetProp(3), swSheetProp(4), FORMATPATH, swSheetProp(5), swSheetProp(6), swSheetProp(7), True)
    swSheet.ReloadTemplate (False)
    
    Dim swFeat As SldWorks.Feature
    Set swFeat = swModel.FirstFeature
    While Not swFeat Is Nothing
        If "BomFeat" = swFeat.GetTypeName Then
            swFeat.Select2 False, -1
            swModel.Extension.DeleteSelection2 swDeleteSelectionOptions_e.swDelete_Absorbed
        End If
        Set swFeat = swFeat.GetNextFeature
    Wend
    
    
               'Get all views
    Set swSheet = swDraw.GetCurrentSheet
    Dim vViews As Variant
    vViews = swSheet.GetViews
    
    'For each veiws
    Dim A As Integer
    For A = 0 To UBound(vViews)
        Dim swView As SldWorks.View
        Set swView = vViews(A)
        If swView.Type = 3 Or swView.Type = 2 Then
            boolstatus = swModel.Extension.SelectByID2(swView.GetName2, "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = swModel.Extension.DeleteSelection2(2)
        End If
        
    Next
    
    
    
    
    swModel.ForceRebuild3 (True)
    Set swModel = swApp.ActiveDoc
    Set SelMgr = swModel.SelectionManager
    
    Dim SelParams As Variant
    SelParams = swApp.GetSelectionFilters
    swApp.SetSelectionFilters SelParams, False
    swApp.GetSelectionFilters
    
    Dim Filter(4) As Long
    Filter(0) = 15 'Notes
    Filter(1) = 54 'BOMS
    Filter(3) = 35 'Surface Finish Symbols
    Filter(4) = 38 'Welds
    
    swApp.SetSelectionFilters (Filter), True
    boolstatus = swApp.GetApplySelectionFilter
    swApp.SetApplySelectionFilter True
    swModel.Extension.SelectAll
    boolstatus = swModel.Extension.DeleteSelection2(2)
    swApp.SetApplySelectionFilter False
'Rebuild document
swModel.ForceRebuild3 (True)
End Sub
